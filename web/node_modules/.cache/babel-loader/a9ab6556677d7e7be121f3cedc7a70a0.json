{"remainingRequest":"/Users/mike/Documents/github/ThinkComponents/20.code/think-components/web/node_modules/babel-loader/lib/index.js!/Users/mike/Documents/github/ThinkComponents/20.code/think-components/web/node_modules/eslint-loader/index.js??ref--13-0!/Users/mike/Documents/github/ThinkComponents/20.code/think-components/web/src/config/AppConfig.js","dependencies":[{"path":"/Users/mike/Documents/github/ThinkComponents/20.code/think-components/web/src/config/AppConfig.js","mtime":1532232243000},{"path":"/Users/mike/Documents/github/ThinkComponents/20.code/think-components/web/node_modules/cache-loader/dist/cjs.js","mtime":1550646442000},{"path":"/Users/mike/Documents/github/ThinkComponents/20.code/think-components/web/node_modules/babel-loader/lib/index.js","mtime":1550646421000},{"path":"/Users/mike/Documents/github/ThinkComponents/20.code/think-components/web/node_modules/eslint-loader/index.js","mtime":1550646431000}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/mike/Documents/github/ThinkComponents/20.code/think-components/web/node_modules/@babel/runtime/helpers/builtin/es6/classCallCheck\";\nimport _createClass from \"/Users/mike/Documents/github/ThinkComponents/20.code/think-components/web/node_modules/@babel/runtime/helpers/builtin/es6/createClass\";\n\n/**\n * 系统配置类，系统中所有的配置建议在此类中进行配置\n * 此类为单例模式实现，如果使用，需要调用 AppConfig.getAppConfig()方法来获取其实例。\n */\nvar AppConfig =\n/*#__PURE__*/\nfunction () {\n  function AppConfig() {\n    _classCallCheck(this, AppConfig);\n\n    if (AppConfig.instantiation) {\n      throw new Error(\"This class has been instantiated and can be retrieved using the 'AppConfig.getAppConfig()' method.\");\n    }\n\n    this.appConfig = {\n      env: \"dev\",\n      //环境配置 dev 开发环境; sit:测试环境 ; pro: 生产环境\n      appName: \"Front-end-baseline\",\n      //项目名称\n      version: \"1.0.0\",\n      debugger: true,\n      dev: {\n        //开发环境配置\n        gateway: \"http://127.0.0.1:9090\"\n      },\n      pro: {\n        //生产环境配置\n        gateway: \"生产地址网关\"\n      },\n      httpConfig: {\n        httpTimeout: 6000,\n        //Http请求 6秒超时  开发后台接口需要注意注意超时时间\n        contentType: \"application/json; charset=utf-8\",\n        //\"application/x-www-form-urlencoded\", //Http请求 Content-type配置   application/x-www-form-urlencoded;charset=UTF-8\n        AccessControlAllowOrigin: \"*\" //headers: { 'Access-Control-Allow-Origin': '*' }\n\n      } //配置类，其属性不容许在代码中修改，如果需要修改，需要修改源码\n\n    };\n    Object.defineProperty(this, \"appConfig\", {\n      configurable: true,\n      writable: false\n    });\n  }\n  /**\n   * 获取配置环境内容\n   * @param {配置KEY} key \n   */\n\n\n  _createClass(AppConfig, [{\n    key: \"getConfigData\",\n    value: function getConfigData(key) {\n      var result = null;\n\n      if (this.appConfig && this.appConfig[this.appConfig.env] && this.appConfig[this.appConfig.env].hasOwnProperty(key)) {\n        result = this.appConfig[this.appConfig.env][key];\n      } else if (this.appConfig && this.appConfig.hasOwnProperty(key)) {\n        result = this.appConfig[key];\n      }\n\n      return result;\n    }\n    /**\n     * 获取APP 网关地址\n     */\n\n  }, {\n    key: \"getAppGateway\",\n    value: function getAppGateway() {\n      return this.getConfigData(\"gateway\");\n    }\n  }, {\n    key: \"getVersion\",\n    value: function getVersion() {\n      return this.getConfigData(\"version\");\n    }\n  }], [{\n    key: \"getAppConfig\",\n    value: function getAppConfig() {\n      if (!AppConfig.instantiation) {\n        AppConfig.instantiation = new AppConfig();\n      }\n\n      return AppConfig.instantiation;\n    }\n  }]);\n\n  return AppConfig;\n}();\n\nexport default AppConfig;",{"version":3,"sources":["src/config/AppConfig.js"],"names":["AppConfig","instantiation","Error","appConfig","env","appName","version","debugger","dev","gateway","pro","httpConfig","httpTimeout","contentType","AccessControlAllowOrigin","Object","defineProperty","configurable","writable","key","result","hasOwnProperty","getConfigData"],"mappings":";;;AAAA;;;;IAIMA,S;;;AAEF,uBAAa;AAAA;;AACT,QAAIA,UAAUC,aAAd,EAA6B;AACzB,YAAM,IAAIC,KAAJ,CAAU,oGAAV,CAAN;AACH;;AAED,SAAKC,SAAL,GAAiB;AACbC,WAAI,KADS;AACH;AACVC,eAAQ,oBAFK;AAEgB;AAC7BC,eAAQ,OAHK;AAIbC,gBAAU,IAJG;AAKbC,WAAI;AAAC;AACDC,iBAAQ;AADR,OALS;AAQbC,WAAI;AAAC;AACDD,iBAAQ;AADR,OARS;AAWbE,kBAAW;AACPC,qBAAa,IADN;AACW;AAClBC,qBAAa,iCAFN;AAEyC;AAChDC,kCAA2B,GAHpB,CAGuB;;AAHvB,OAXE,CAmBjB;;AAnBiB,KAAjB;AAoBAC,WAAOC,cAAP,CAAsB,IAAtB,EAA4B,WAA5B,EAAyC;AAAEC,oBAAa,IAAf;AAAoBC,gBAAU;AAA9B,KAAzC;AACH;AAED;;;;;;;;kCAIcC,G,EAAI;AACd,UAAIC,SAAS,IAAb;;AACA,UAAI,KAAKjB,SAAL,IAAkB,KAAKA,SAAL,CAAe,KAAKA,SAAL,CAAeC,GAA9B,CAAlB,IAAwD,KAAKD,SAAL,CAAe,KAAKA,SAAL,CAAeC,GAA9B,EAAmCiB,cAAnC,CAAkDF,GAAlD,CAA5D,EAAmH;AAC/GC,iBAAS,KAAKjB,SAAL,CAAe,KAAKA,SAAL,CAAeC,GAA9B,EAAmCe,GAAnC,CAAT;AACH,OAFD,MAEO,IAAI,KAAKhB,SAAL,IAAkB,KAAKA,SAAL,CAAekB,cAAf,CAA8BF,GAA9B,CAAtB,EAAyD;AAC5DC,iBAAS,KAAKjB,SAAL,CAAegB,GAAf,CAAT;AACH;;AACD,aAAOC,MAAP;AACH;AAGD;;;;;;oCAGe;AACX,aAAO,KAAKE,aAAL,CAAmB,SAAnB,CAAP;AACH;;;iCAEW;AACR,aAAO,KAAKA,aAAL,CAAmB,SAAnB,CAAP;AACH;;;mCAEsB;AACnB,UAAI,CAACtB,UAAUC,aAAf,EAA6B;AACzBD,kBAAUC,aAAV,GAA0B,IAAID,SAAJ,EAA1B;AACH;;AACD,aAAOA,UAAUC,aAAjB;AACH;;;;;;AAEL,eAAeD,SAAf","sourceRoot":"/Users/mike/Documents/github/ThinkComponents/20.code/think-components/web","sourcesContent":["/**\n * 系统配置类，系统中所有的配置建议在此类中进行配置\n * 此类为单例模式实现，如果使用，需要调用 AppConfig.getAppConfig()方法来获取其实例。\n */\nclass AppConfig {\n\n    constructor(){\n        if (AppConfig.instantiation) {\n            throw new Error(\"This class has been instantiated and can be retrieved using the 'AppConfig.getAppConfig()' method.\");\n        }\n\n        this.appConfig = {\n            env:\"dev\",//环境配置 dev 开发环境; sit:测试环境 ; pro: 生产环境\n            appName:\"Front-end-baseline\",//项目名称\n            version:\"1.0.0\",\n            debugger: true,\n            dev:{//开发环境配置\n                gateway:\"http://127.0.0.1:9090\"\n            },\n            pro:{//生产环境配置\n                gateway:\"生产地址网关\"\n            },\n            httpConfig:{\n                httpTimeout: 6000,//Http请求 6秒超时  开发后台接口需要注意注意超时时间\n                contentType: \"application/json; charset=utf-8\", //\"application/x-www-form-urlencoded\", //Http请求 Content-type配置   application/x-www-form-urlencoded;charset=UTF-8\n                AccessControlAllowOrigin : \"*\"//headers: { 'Access-Control-Allow-Origin': '*' }\n            }\n\n        }\n\n        //配置类，其属性不容许在代码中修改，如果需要修改，需要修改源码\n        Object.defineProperty(this, \"appConfig\", { configurable:true,writable: false });\n    }\n\n    /**\n     * 获取配置环境内容\n     * @param {配置KEY} key \n     */\n    getConfigData(key){\n        var result = null;\n        if (this.appConfig && this.appConfig[this.appConfig.env] && this.appConfig[this.appConfig.env].hasOwnProperty(key)){\n            result = this.appConfig[this.appConfig.env][key]\n        } else if (this.appConfig && this.appConfig.hasOwnProperty(key)){\n            result = this.appConfig[key]\n        }\n        return result;\n    }\n\n    \n    /**\n     * 获取APP 网关地址\n     */\n    getAppGateway(){\n        return this.getConfigData(\"gateway\");\n    }\n\n    getVersion(){\n        return this.getConfigData(\"version\");\n    }\n\n    static getAppConfig () {\n        if (!AppConfig.instantiation){\n            AppConfig.instantiation = new AppConfig();\n        }\n        return AppConfig.instantiation;\n    }\n}\nexport default AppConfig;\n"]}]}